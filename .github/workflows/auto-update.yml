name: Auto Update

on:
  repository_dispatch:
    types: [custom_event]

jobs:
  handle-issue:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.check-issues.outputs.issue_number }}
    steps:
      - name: Get release tag
        run: |
          echo "Received release tag: ${{ github.event.client_payload.release_tag }} from CLIc"

      - name: Check if issues already exists
        id: check-issues
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'auto-update',
              state: 'all'
            });

            const issue = issues.find(issue => issue.title === `Update to ${context.payload.client_payload.release_tag}`);

            if (issue) {
              core.setOutput('issue_number', issue.number);
            } else {
              core.setOutput('issue_number', '');
            }

      - name: Create issue
        id: create-issue
        if: steps.check-issues.outputs.issue_number == ''
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: issue } = await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Auto-Update to ${context.payload.client_payload.release_tag}`,
              body: `This is an automated issue created by the auto-update workflow following up a new Release of CLIc.

            ### Release Information
            - **Release Tag:** ${context.payload.client_payload.release_tag}
            - **Changelog:** [View Changelog](https://github.com/clEsperanto/CLIc/releases/tag/${context.payload.client_payload.release_tag})

            Please review the changes and update the dependencies accordingly.`,
              labels: ['auto-update']
            });

            core.setOutput('issue_number', issue.number);

      - name: Add message
        id: add-message
        if: steps.check-issues.outputs.issue_number != ''
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const issue_number = ${{ steps.check-issues.outputs.issue_number }};
            const { data: issue } = await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number
            });

            if (issue.state === 'closed') {
              await github.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                state: 'open'
              });
            }

            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `Rerun of the Auto-Update workflow: #${{ github.run_number }}.`
            });

            core.setOutput('issue_number', issue_number);

  update-code:
    needs: handle-issue
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if branch exist or create a new one
        run: |
          git fetch --all
          git checkout -b update-dependencies-${{ github.event.client_payload.release_tag }} || git checkout update-dependencies-${{ github.event.client_payload.release_tag }}

      - name: Get GenCLE and update code
        id: update-code
        env:
            GH_TOKEN: ${{ secrets.RELEASE_PAT }}
        run: |
            git clone https://$GH_TOKEN@github.com/clEsperanto/gencle.git gencle
            python ./gencle/pyclesperanto_auto_update.py ${{ github.workspace }} ${{ github.event.client_payload.release_tag }}
            rm -rf gencle

      - name: Commit and push changes if any
        id: commit-push
        run: |
          if ! git diff-index --quiet HEAD; then
            git add .
            git commit -m "Update dependencies to ${{ github.event.client_payload.release_tag }}"
            git push origin update-dependencies-${{ github.event.client_payload.release_tag }}
          fi
          
      - name: Check if PR already exists
        id: check-pr
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: prs } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `update-dependencies-${context.payload.client_payload.release_tag}`
            });

            if (prs.length > 0) {
              core.setOutput('pr_number', prs[0].number);
            } else {
              core.setOutput('pr_number', '');
            }

      - name: Create a pull request
        id: create-pr
        if: steps.check-pr.outputs.pr_number == ''
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: pr } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update dependencies to ${context.payload.client_payload.release_tag}`,
              head: `update-dependencies-${context.payload.client_payload.release_tag}`,
              base: 'main',
              body: `### Automated Dependency Update
      
            This is an automated pull request created by the auto-update workflow following up a new Release of CLIc.
            
            **Release Tag:** ${context.payload.client_payload.release_tag}
                        
            Closes #${{ needs.handle-issue.outputs.issue_number }}`,
            });
      
            core.setOutput('pr_number', pr.number);