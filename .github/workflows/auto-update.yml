name: Auto Update

on:
  repository_dispatch:
    types: [custom_event]

jobs:
  handle-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Get release tag
        run: |
          echo "Received release tag: ${{ github.event.client_payload.release_tag }} from CLIc"

      - name: Check if issues already exists
        id: check-issues
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'auto-update',
              state: 'open'
            });

            const issue = issues.find(issue => issue.title === `Update to ${context.payload.client_payload.release_tag}`);

            if (issue) {
              core.setOutput('issue_number', issue.number);
            }

      - name: Create issue
        if: steps.check-issues.outputs.issue_number == ''
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const { data: issue } = await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update to ${context.payload.client_payload.release_tag}`,
              body: 'This is an automated issue created by the CLIc to update the dependencies.',
              labels: ['auto-update']
            });

            core.setOutput('issue_number', issue.number);
            

  update-code:
    needs: handle-issue
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get GenCLE and update code
        env:
            GH_TOKEN: ${{ secrets.RELEASE_PAT }}
        run: |
            git clone https://$GH_TOKEN@github.com/clEsperanto/gencle.git gencle
            python ./gencle/pyclesperanto_auto_update.py ${{ github.workspace }} "clEsperanto/CLIc" ${{ github.event.inputs.release_tag }}

      - name: Commit and push changes in a new branch
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b update-dependencies-${{ github.event.inputs.release_tag }}
            git add .
            git commit -m "Update dependencies"
            git push https://$GH_TOKEN@github.com/${{ github.repository }}.git update-dependencies-${{ github.event.inputs.release_tag }}
          
      - name: Create a pull request for the new branch
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const issue_number = core.getInput('issue_number');
            const { data: pr } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update dependencies to ${context.payload.client_payload.release_tag}`,
              head: `update-dependencies-${context.payload.client_payload.release_tag}`,
              base: 'main',
              body: `This PR updates pyclesperanto tiers code to clEsperanto/CLIc@${{ github.event.client_payload.release_tag }}.\n\ncloses #${issue_number}`
            });

            core.setOutput('pr_number', pr.number);